name: Build Perf+ Kernel

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Kernel Source
      uses: actions/checkout@v3

    - name: Setup Environment
      run: |
        sudo apt-get update
        sudo apt-get install -y bc bison flex libssl-dev build-essential \
        gcc-aarch64-linux-gnu gcc-arm-linux-gnueabi make cpio

    - name: Setup Compiler
      run: |
        git clone --depth=1 https://github.com/mvaisakh/gcc-arm64.git gcc64
        git clone --depth=1 https://github.com/mvaisakh/gcc-arm.git gcc32
        export PATH=$PWD/gcc64/bin:$PWD/gcc32/bin:$PATH

    - name: Configure Kernel (Perf+)
      run: |
        # Use coful_defconfig from the repo
        make O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- configs/coful_defconfig

        # Performance Tweaks - Adding more kernel optimizations
        echo "CONFIG_NO_HZ=y" >> out/.config  # Enable nohz (tickless) mode for CPU power efficiency
        echo "CONFIG_HZ_1000=y" >> out/.config  # Set high timer frequency (1000 Hz)
        echo "CONFIG_SCHED_AUTOGROUP=y" >> out/.config  # Automatically group tasks into the same cgroup for load balancing
        echo "CONFIG_SCHED_CPUFREQ=y" >> out/.config  # Enable CPU frequency scaling for performance
        echo "CONFIG_CGROUP_SCHED=y" >> out/.config  # Enable the cgroup scheduler to enhance process scheduling
        echo "CONFIG_VMSPLIT_3G=y" >> out/.config  # 3G memory split for optimized memory management
        echo "CONFIG_GENERIC_CPU" >> out/.config  # Generic CPU features for better multi-core handling
        echo "CONFIG_RCPU_BOOST=y" >> out/.config  # Enable RCPU boost for faster response time on multicore systems
        echo "CONFIG_FTRACE_SYSCALLS=y" >> out/.config  # Enable syscall tracing (may impact performance slightly but useful for debugging)
        echo "CONFIG_LOCKDEP=y" >> out/.config  # Enable lock debugging
        echo "CONFIG_KEXEC=y" >> out/.config  # Enable kernel kexec functionality (useful for quick reboots)
        echo "CONFIG_BLK_DEV_IO_TRACE=y" >> out/.config  # Enable block device I/O tracing

    - name: Build Kernel
      run: |
        make -j$(nproc) O=out ARCH=arm64 CROSS_COMPILE=aarch64-linux-gnu- || tail -n 1000 out/build.log

    - name: Package Kernel
      run: |
        mkdir -p release
        cp out/arch/arm64/boot/Image.gz-dtb release/
        echo "Kernel build complete! Find the output in the release folder."

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Perf+Kernel
        path: release/
